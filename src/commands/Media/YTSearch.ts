import { MessageType } from '@adiwajshing/baileys'
import MessageHandler from '../../Handlers/MessageHandler'
import BaseCommand from '../../lib/BaseCommand'
import WAClient from '../../lib/WAClient'
import { IParsedArgs, ISimplifiedMessage } from '../../typings'
import yts from 'yt-search'

export default class Command extends BaseCommand {
    constructor(client: WAClient, handler: MessageHandler) {
        super(client, handler, {
            command: 'yts',
            description: 'YouTube ‡∑Ñ‡∑í ‡∑É‡∑ô‡∑Ä‡∑ì‡∂∏‡∂ß',
            category: 'media',
            aliases: ['ytsearch'],
            usage: `${client.config.prefix}yts [term]`,
            baseXp: 20
        })
    }

    run = async (M: ISimplifiedMessage, { joined }: IParsedArgs): Promise<void> => {
        if (!joined) return void M.reply('üîé ‡∑É‡∑ô‡∑Ä‡∑ì‡∂∏‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∑Ä‡∂†‡∂±‡∂∫ ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±')
        const term = joined.trim()
        const { videos } = await yts(term)
        if (!videos || videos.length <= 0) return void M.reply(`‚öì ‡∂ö‡∑í‡∑É‡∑í‡∂≥‡∑î ‡∂ú‡∑ê‡∂Ω‡∂¥‡∑ô‡∂± ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä‡∂ö‡∑ä ‡∑Ñ‡∂∏‡∑î‡∑Ä‡∑ñ‡∂∫‡∑ö ‡∂±‡∑ê‡∂≠ : *${term}*`)
        const length = videos.length < 10 ? videos.length : 10
        let text = `üîé *‡∂¥‡∑ä‚Äç‡∂ª‡∂≠‡∑í‡∂¥‡∂Ω ‡∂Ω‡∂∂‡∑è‡∂Ø‡∑ì‡∂∏ ${term}*\n`
        for (let i = 0; i < length; i++) {
            text += `*#${i + 1}*\nüìó *‡∂≠‡∑ö‡∂∏‡∑è‡∑Ä:* ${videos[i].title}\nüìï *‡∂±‡∑è‡∂Ω‡∑í‡∂ö‡∑è‡∑Ä:* ${
                videos[i].author.name
            }\n üìô *‡∂∞‡∑è‡∑Ä‡∂± ‡∂ö‡∑è‡∂Ω‡∂∫:* ${videos[i].duration}\nüìò *‡∑É‡∂∂‡∑ê‡∂≥‡∑í‡∂∫:* ${videos[i].url}\n\n`
        }
        M.reply('‚ù§ ‡∑É‡∑ú‡∂∫‡∂∏‡∑í‡∂±‡∑ä ‡∂¥‡∑Ä‡∂≠‡∑ì')
        this.client
            .sendMessage(M.from, text, MessageType.extendedText, {
                quoted: M.WAMessage,
                contextInfo: {
                    externalAdReply: {
                        title: `‡∑É‡∑ô‡∑Ä‡∑î‡∂∏‡∑ä ‡∑Ä‡∂†‡∂±‡∂∫: ${term}`,
                        body: `‚ù§Queen Hesh ‡∑Ä‡∑ô‡∂≠‡∑í‡∂±‡∑ä‚ù§`,
                        mediaType: 2,
                        thumbnailUrl: videos[0].thumbnail,
                        mediaUrl: videos[0].url
                    }
                }
            })
            .catch((reason: any) => M.reply(`‚ùå ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∑Ñ‡∂ß‡∂ú‡∑ê‡∂´‡∑î‡∂±‡∑í, ‡∑Ñ‡∑ö‡∂≠‡∑î‡∑Ä: ${reason}`))
    }
}
