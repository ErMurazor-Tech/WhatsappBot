import { MessageType, Mimetype } from '@adiwajshing/baileys'
import MessageHandler from '../../Handlers/MessageHandler'
import BaseCommand from '../../lib/BaseCommand'
import WAClient from '../../lib/WAClient'
import YT from '../../lib/YT'
import { ISimplifiedMessage } from '../../typings'

export default class Command extends BaseCommand {
    constructor(client: WAClient, handler: MessageHandler) {
        super(client, handler, {
            command: 'ytv',
            description: '‡∂î‡∂∂ ‡∂Ω‡∂∂‡∑è‡∂Ø‡∑î‡∂±‡∑ä YouTube ‡∑É‡∂∂‡∑ê‡∂≥‡∑í‡∂∫ ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É ‡∂Ω‡∂∂‡∑è‡∂ú‡∂≠ ‡∑Ñ‡∑ê‡∂ö',
            category: 'media',
            aliases: ['ytvideo'],
            usage: `${client.config.prefix}ytv [URL]`,
            baseXp: 10
        })
    }

    run = async (M: ISimplifiedMessage): Promise<void> => {
        if (!M.urls.length) return void M.reply('üîé ‡∂î‡∂∂‡∂ß ‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä‡∑ô‡∑Ñ‡∑í ‡∑É‡∂∂‡∑ê‡∂≥‡∑í‡∂∫ ‡∂Ω‡∂∂‡∑è‡∂Ø‡∑ô‡∂±‡∑ä‡∂±')
        const video = new YT(M.urls[0], 'video')
        if (!video.validateURL()) return void M.reply(`‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î ‡∑É‡∂∂‡∑ê‡∂≥‡∑í‡∂∫‡∂ö‡∑ä ‡∂Ω‡∂∂‡∑è‡∂Ø‡∑ô‡∂±‡∑ä‡∂±`)
        const { videoDetails } = await video.getInfo()
        M.reply('‚ù§ ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä ‡∂ë‡∑Ä‡∂∏‡∑í‡∂±‡∑ä ‡∂¥‡∑Ä‡∂≠‡∑ì...')
        if (Number(videoDetails.lengthSeconds) > 1800)
            return void M.reply('‚öì ‡∑Ä‡∑í‡∂±‡∑è‡∂©‡∑í 30 ‡∂ö‡∂ß ‡∑Ä‡∑ê‡∂©‡∑í ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù ‡∂ë‡∑Ä‡∑ì‡∂∏‡∂ß ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö')
        M.reply(await video.getBuffer(), MessageType.video).catch((reason: Error) =>
            M.reply(`‚ùå ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∑Ñ‡∂ß‡∂ú‡∑ê‡∂´‡∑î‡∂±‡∑í, ‡∑Ñ‡∑ö‡∂≠‡∑î‡∑Ä: ${reason}`)
        )
    }
}
