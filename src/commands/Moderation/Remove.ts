import MessageHandler from '../../Handlers/MessageHandler'
import BaseCommand from '../../lib/BaseCommand'
import WAClient from '../../lib/WAClient'
import { ISimplifiedMessage } from '../../typings'

export default class Command extends BaseCommand {
    constructor(client: WAClient, handler: MessageHandler) {
        super(client, handler, {
            adminOnly: true,
            aliases: ['boom', 'kick'],
            command: 'remove',
            description: '‡∂î‡∂∂ ‡∑É‡∂≥‡∑Ñ‡∂±‡∑ä ‡∂ö‡∂ª‡∂± ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∂±‡∑ä‡∑Ä ‡∑É‡∂∏‡∑ñ‡∑Ñ‡∂∫‡∑ô‡∂±‡∑ä ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∂ª‡∂∫‡∑í',
            category: 'moderation',
            usage: `${client.config.prefix}remove [@mention | tag]`,
            baseXp: 10
        })
    }

    run = async (M: ISimplifiedMessage): Promise<void> => {
        if (!M.groupMetadata?.admins?.includes(this.client.user.jid))
            return void M.reply(`‚ùå ‡∂∏‡∂∏ ‡∂á‡∂©‡∑ä‡∂∏‡∑í‡∂±‡∑ä ‡∑Ä‡∂ª‡∂∫‡∑ô‡∂ö‡∑ä ‡∂±‡∑ú‡∑Ä‡∂± ‡∂±‡∑í‡∑É‡∑è‡∂Ö ${this.config.command} ‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫ ‡∂â‡∂ß‡∑î ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö‡∑í ‡∑Ä‡∑í‡∂∫`)
        if (M.quoted?.sender) M.mentioned.push(M.quoted.sender)
        if (!M.mentioned.length) return void M.reply(`‡∂î‡∂∂‡∂ß ${this.config.command} ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∂±‡∑ä‡∑Ä ‡∑É‡∂≥‡∑Ñ‡∂±‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±`)
        M.mentioned.forEach(async (user) => {
            const usr = this.client.contacts[user]
            const username = usr.notify || usr.vname || usr.name || user.split('@')[0]
            if (M.groupMetadata?.admins?.includes(user)) M.reply(`‚ùå *${username}* ‡∂á‡∂©‡∑ä‡∂∏‡∑í‡∂±‡∑ä ‡∂ö‡∑ô‡∂±‡∑ô‡∂ö‡∑î ‡∑Ä‡∑ö`)
            else {
                await this.client.groupRemove(M.from, [user])
                M.reply(`üèåÔ∏è‚Äç‚ôÇÔ∏è‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∑ô‡∂ª‡∑í‡∂´‡∑í *${username}*`)
            }
        })
    }
}
